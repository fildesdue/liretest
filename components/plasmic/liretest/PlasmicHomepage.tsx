// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: tPqUSAvm89CQ6Ba6P7RSnu
// Component: ezJeOoFJcEaM
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import SwitchTokenomics from "../../SwitchTokenomics"; // plasmic-import: qPlLCVDiWHD/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: iAbJgYd3dHOG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_liretest.module.css"; // plasmic-import: tPqUSAvm89CQ6Ba6P7RSnu/projectcss
import * as sty from "./PlasmicHomepage.module.css"; // plasmic-import: ezJeOoFJcEaM/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: tA-Y2ai5ojH/icon
import TwitterOriginalIcon from "./icons/PlasmicIcon__TwitterOriginal"; // plasmic-import: sYtuLOHhVe/icon
import Group1Icon from "./icons/PlasmicIcon__Group1"; // plasmic-import: XjMnxdNAJD/icon
import PresaleIconsvgIcon from "./icons/PlasmicIcon__PresaleIconsvg"; // plasmic-import: a_8Ig4V_y3/icon
import PancakeSwapIconsvgIcon from "./icons/PlasmicIcon__PancakeSwapIconsvg"; // plasmic-import: zT0kcFOQgl/icon
import MarketingIconsvgIcon from "./icons/PlasmicIcon__MarketingIconsvg"; // plasmic-import: qJO_JY99QI/icon
import DevIconsvgIcon from "./icons/PlasmicIcon__DevIconsvg"; // plasmic-import: _uRXG_8MWx/icon
import AirdropIconsvgIcon from "./icons/PlasmicIcon__AirdropIconsvg"; // plasmic-import: 1zongJ40ez/icon
import LockCorrectSvgrepoComsvgIcon from "./icons/PlasmicIcon__LockCorrectSvgrepoComsvg"; // plasmic-import: rpEoMuwa9/icon
import FireSvgrepoComsvgIcon from "./icons/PlasmicIcon__FireSvgrepoComsvg"; // plasmic-import: JwXSgvMYQW/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: QVqxva8sONMr/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  hero?: p.Flex<"div">;
  whitePaper?: p.Flex<"a"> & Partial<LinkProps>;
  button?: p.Flex<"button">;
  chart?: p.Flex<"a"> & Partial<LinkProps>;
  telegram3?: p.Flex<"a"> & Partial<LinkProps>;
  telegram2?: p.Flex<"img">;
  reddit2?: p.Flex<"a"> & Partial<LinkProps>;
  discord2?: p.Flex<"a"> & Partial<LinkProps>;
  discord?: p.Flex<"svg">;
  switchTokenomics?: p.Flex<typeof SwitchTokenomics>;
  distributionCards?: p.Flex<"div">;
  distributionCards2?: p.Flex<"div">;
  foreground4?: p.Flex<"div">;
  pancake?: p.Flex<"a"> & Partial<LinkProps>;
  poocoinChart?: p.Flex<"a"> & Partial<LinkProps>;
  telegram?: p.Flex<"a"> & Partial<LinkProps>;
  twitter?: p.Flex<"a"> & Partial<LinkProps>;
  reddit?: p.Flex<"a"> & Partial<LinkProps>;
};

export interface DefaultHomepageProps {
  dataFetches: PlasmicHomepage__Fetches;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  dataFetches?: PlasmicHomepage__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
        <meta key="og:title" property="og:title" content={""} />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={""}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(defaultcss.all, sty.hero)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__dnhss)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__ttd5V)}
              >
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__lolDr)}
                  role={"img"}
                  src={"/plasmic/liretest/images/risorsa1Rank12Svg.svg"}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__gdRaM)}
                >
                  <p.Stack
                    as={p.PlasmicLink}
                    data-plasmic-name={"whitePaper"}
                    data-plasmic-override={overrides.whitePaper}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.whitePaper)}
                    component={Link}
                    href={
                      "https://www.dropbox.com/s/mvv9a7ntfzrnawa/BUSDkittiesVer2.pdf?dl=0" as const
                    }
                    platform={"nextjs"}
                    target={"_blank" as const}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(defaultcss.all, sty.svg__jSbB)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__cNtVp
                      )}
                    >
                      {"Whitepaper"}
                    </div>

                    {false ? (
                      <IconIcon
                        className={classNames(defaultcss.all, sty.svg__nkj6E)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </p.Stack>

                {false ? (
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__ycXts)}
                  >
                    <button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(
                        defaultcss.button,
                        defaultcss.__wab_text,
                        sty.button
                      )}
                    >
                      {"Sign up"}
                    </button>

                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.link__sDcbf)}
                      component={Link}
                      platform={"nextjs"}
                    >
                      {false ? (
                        <IconIcon
                          className={classNames(defaultcss.all, sty.svg___80Bu)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__qDimj
                        )}
                      >
                        {"Log in"}
                      </div>

                      {false ? (
                        <IconIcon
                          className={classNames(defaultcss.all, sty.svg__u1TBu)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>
                  </div>
                ) : null}
              </p.Stack>
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.freeBox__rnR68)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__lpxPf)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__tQasv)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__dhDld)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__rmLtg
                      )}
                    >
                      {"Welcome to"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__eYrLl
                      )}
                    >
                      <span>
                        <span style={{ fontStyle: "italic" }}>
                          {"busdkitties"}
                        </span>
                      </span>
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__hbVbq
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "The first BSC Token that rewards you with a high BUSD redistribution on each transaction. Hold the next long-term investment landmark."
                        : "The first BSC Token that rewards you with a high BUSD redistribution.\nBecome an early holder of the next \nlong-term investment landmark."}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__zXw)}
                  >
                    <p.Stack
                      as={p.PlasmicLink}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.link__xnxJe)}
                      component={Link}
                      href={
                        "https://pancakeswap.finance/swap?outputCurrency=0x85c660fe30e4c26aabd0938bce3f29c2ddd49b5e" as const
                      }
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__fa2E6
                        )}
                      >
                        {"BUY NOW"}
                      </div>
                    </p.Stack>

                    <p.Stack
                      as={p.PlasmicLink}
                      data-plasmic-name={"chart"}
                      data-plasmic-override={overrides.chart}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.chart)}
                      component={Link}
                      href={
                        "https://poocoin.app/tokens/0x85c660fe30e4c26aabd0938bce3f29c2ddd49b5e" as const
                      }
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__jh01W
                        )}
                      >
                        {"CHART"}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.freeBox__pTt6C)}
                  >
                    <p.PlasmicLink
                      data-plasmic-name={"telegram3"}
                      data-plasmic-override={overrides.telegram3}
                      className={classNames(defaultcss.all, sty.telegram3)}
                      component={Link}
                      href={"https://t.me/BusdKitties" as const}
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <img
                        data-plasmic-name={"telegram2"}
                        data-plasmic-override={overrides.telegram2}
                        alt={""}
                        className={classNames(defaultcss.img, sty.telegram2)}
                        role={"img"}
                        src={"/plasmic/liretest/images/artboard.svg"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      className={classNames(defaultcss.all, sty.link__do2Jw)}
                      component={Link}
                      href={"https://twitter.com/BusdKitties" as const}
                      platform={"nextjs"}
                      target={"_blank" as const}
                    >
                      <TwitterOriginalIcon
                        className={classNames(defaultcss.all, sty.svg__wP880)}
                        role={"img"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"reddit2"}
                      data-plasmic-override={overrides.reddit2}
                      className={classNames(defaultcss.all, sty.reddit2)}
                      component={Link}
                      href={"https://www.reddit.com/r/BusdKitties/" as const}
                      platform={"nextjs"}
                    >
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__oKta4)}
                        role={"img"}
                        src={"/plasmic/liretest/images/redditOriginal.svg"}
                      />
                    </p.PlasmicLink>

                    <p.PlasmicLink
                      data-plasmic-name={"discord2"}
                      data-plasmic-override={overrides.discord2}
                      className={classNames(defaultcss.all, sty.discord2)}
                      component={Link}
                      href={"https://discord.gg/hbN6B9Ys" as const}
                      platform={"nextjs"}
                    >
                      <Group1Icon
                        data-plasmic-name={"discord"}
                        data-plasmic-override={overrides.discord}
                        className={classNames(defaultcss.all, sty.discord)}
                        role={"img"}
                      />
                    </p.PlasmicLink>
                  </p.Stack>
                </p.Stack>

                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__wDssM)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <img
                        alt={""}
                        className={classNames(defaultcss.img, sty.img__ashmw)}
                        role={"img"}
                        src={"/plasmic/liretest/images/divider2Png.png"}
                      />
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <div
                        className={classNames(
                          defaultcss.all,
                          sty.freeBox__hzow4
                        )}
                      />
                    ) : null}
                  </div>
                ) : null}
              </p.Stack>
            </div>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__wGftO)}
          >
            <SwitchTokenomics
              data-plasmic-name={"switchTokenomics"}
              data-plasmic-override={overrides.switchTokenomics}
              className={classNames("__wab_instance", sty.switchTokenomics)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.freeBox__km3Ew
                )}
              >
                {"Buy fees"}
              </div>
            </SwitchTokenomics>
          </p.Stack>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___4ZiAu)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.freeBox__pn3TJ
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "TOKENOMICS"
                : "TOKEN DISTRIBUTION"}
            </div>

            <h2
              className={classNames(
                defaultcss.h2,
                defaultcss.__wab_text,
                sty.h2__sqMvg
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Opportunity \nfor everyone."
                : "Opportunity for everyone."}
            </h2>
          </p.Stack>

          <p.Stack
            as={"div"}
            data-plasmic-name={"distributionCards"}
            data-plasmic-override={overrides.distributionCards}
            hasGap={true}
            className={classNames(defaultcss.all, sty.distributionCards)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___3QWIz)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__tubr0)}>
                <PresaleIconsvgIcon
                  className={classNames(defaultcss.all, sty.svg__nxcqg)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__sPSvF)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__hTqGo
                  )}
                >
                  {"Private & Public Sale"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___3MOfV
                  )}
                >
                  {"320.000.000 BUSDK (32%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___38GHj
                  )}
                >
                  {
                    "Two presales will take places.\nA Private sale for trusted hodlers \nand a public sale for the community."
                  }
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__vDrp)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox___3Yk17)}>
                <PancakeSwapIconsvgIcon
                  className={classNames(defaultcss.all, sty.svg__y3I8F)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__k1Prh)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__kbY1X
                  )}
                >
                  {"PancakeSwap Pool"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__aJqQe
                  )}
                >
                  {"200.000.000 BUSDK (20%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___04FK
                  )}
                >
                  {
                    "The liquidity pool needed to let the token be purchasable for people that didn't partecipate at the presales."
                  }
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__sXxmi)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__q5WHr)}>
                <MarketingIconsvgIcon
                  className={classNames(defaultcss.all, sty.svg__cW1Z0)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__e6CvZ)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__rxxgS
                  )}
                >
                  {"Marketing Wallet "}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__a8Byt
                  )}
                >
                  {"50.000.000 BUSDK (5%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___8QRn
                  )}
                >
                  {
                    "The purpouse of the marketing wallet is to hodl and use the busd distributions to pay for sponsorships."
                  }
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__yxCNw)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__rQ9Bg)}>
                <DevIconsvgIcon
                  className={classNames(defaultcss.all, sty.svg__otwaV)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__yiRyo)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___2OErA
                  )}
                >
                  {"Dev Wallet"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___61P4L
                  )}
                >
                  {"30.000.000 BUSDK (3%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__jjOz
                  )}
                >
                  {"Our three passionate Devs."}
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__eD73L)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__vkztC)}>
                <AirdropIconsvgIcon
                  className={classNames(defaultcss.all, sty.svg__lwPfk)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__gHavG)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__b3Idt
                  )}
                >
                  {"Airdrop Wallet"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__cuI7J
                  )}
                >
                  {"30.000.000 BUSDK (3%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__ke1O
                  )}
                >
                  {
                    "A separate wallet to use only for airdrop and community iniatives."
                  }
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__dlFYq)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__vuByb)}>
                <LockCorrectSvgrepoComsvgIcon
                  className={classNames(defaultcss.all, sty.svg__b6Uih)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__uxAm0)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___7Kxo3
                  )}
                >
                  {"Locked Wallet"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__qdJxg
                  )}
                >
                  {"100.000.000 BUSDK (10%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__yBUV
                  )}
                >
                  {
                    "These tokens will be used to give liquidity to future major exchanges and, whether needed, to make manual burns."
                  }
                </div>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox___3TOZ)}
            >
              <div className={classNames(defaultcss.all, sty.freeBox__jRhO)}>
                <FireSvgrepoComsvgIcon
                  className={classNames(defaultcss.all, sty.svg__a8EAv)}
                  role={"img"}
                />
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox___91L78)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__tGKyP
                  )}
                >
                  {"Initial Burn"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__fciZr
                  )}
                >
                  {"200.000.000 BUSDK (27%)"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__sumSi
                  )}
                >
                  {
                    "20% Will be immediately burned before the token launch on pancake swap.\n7% burned as DXsale fees."
                  }
                </div>
              </div>
            </p.Stack>
          </p.Stack>

          {(
            hasVariant(globalVariants, "screen", "tabletMini") ? false : false
          ) ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"distributionCards2"}
              data-plasmic-override={overrides.distributionCards2}
              hasGap={true}
              className={classNames(defaultcss.all, sty.distributionCards2)}
            >
              {(
                hasVariant(globalVariants, "screen", "tabletMini")
                  ? false
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__jXjgD)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "tabletMini")
                      ? false
                      : true
                  ) ? (
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__kPxmz)}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "tabletMini")
                          ? false
                          : true
                      ) ? (
                        <PresaleIconsvgIcon
                          className={classNames(
                            defaultcss.all,
                            sty.svg___94VEw
                          )}
                          role={"img"}
                        />
                      ) : null}
                    </div>
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "tabletMini")
                      ? false
                      : true
                  ) ? (
                    <div
                      className={classNames(defaultcss.all, sty.freeBox__s0VC)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox___4BPhk
                        )}
                      >
                        {"Private & Public Sale"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__q5Ap2
                        )}
                      >
                        {"270.000.000 BUSDK (27%)"}
                      </div>

                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.freeBox__f04Es
                        )}
                      >
                        {
                          "Two presales will take places.\nA Private sale for trusted hodlers \nand a public sale for the community."
                        }
                      </div>
                    </div>
                  ) : null}
                </p.Stack>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "tabletMini")
                  ? false
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__hMv6N)}
                >
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__fg9Ir)}
                  >
                    <PancakeSwapIconsvgIcon
                      className={classNames(defaultcss.all, sty.svg__sQcPd)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(defaultcss.all, sty.freeBox__yWLdi)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox___1GpBh
                      )}
                    >
                      {"PancakeSwap Pool"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox___3Um11
                      )}
                    >
                      {"180.000.000 BUSDK (15%)"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__fTVaQ
                      )}
                    >
                      {
                        "The liquidity pool needed to let the token be purchasable for people that didn't partecipate at the presales."
                      }
                    </div>
                  </div>
                </p.Stack>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "tabletMini")
                  ? false
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__xOpa1)}
                >
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__fqIat)}
                  >
                    <MarketingIconsvgIcon
                      className={classNames(defaultcss.all, sty.svg__ks2H5)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(defaultcss.all, sty.freeBox__j7F9V)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__semOv
                      )}
                    >
                      {"Marketing Wallet "}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox___8IlMr
                      )}
                    >
                      {"50.000.000 BUSDK (5%)"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__pwVe4
                      )}
                    >
                      {
                        "The purpouse of the marketing wallet is to hodl and use the busd distributions to pay for sponsorships."
                      }
                    </div>
                  </div>
                </p.Stack>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "tabletMini")
                  ? false
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox___0ZaxA)}
                >
                  <div
                    className={classNames(defaultcss.all, sty.freeBox__nsm7F)}
                  >
                    <DevIconsvgIcon
                      className={classNames(defaultcss.all, sty.svg__gQawm)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(defaultcss.all, sty.freeBox___4H3Lq)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__lxn4K
                      )}
                    >
                      {"Dev Wallet"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__n5PYa
                      )}
                    >
                      {"30.000.000 BUSDK (3%)"}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.freeBox__ssrh
                      )}
                    >
                      {"Our three passionate Devs."}
                    </div>
                  </div>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__hjJtg)}
              >
                <div
                  className={classNames(defaultcss.all, sty.freeBox___53G3Z)}
                >
                  <AirdropIconsvgIcon
                    className={classNames(defaultcss.all, sty.svg__qRcoo)}
                    role={"img"}
                  />
                </div>

                <div className={classNames(defaultcss.all, sty.freeBox__kdoib)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__pi01V
                    )}
                  >
                    {"Airdrop Wallet"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___9JQ6
                    )}
                  >
                    {"30.000.000 BUSDK (3%)"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__fNiYz
                    )}
                  >
                    {
                      "A separate wallet to use only for airdrop and community iniatives."
                    }
                  </div>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__lwRnd)}
              >
                <div className={classNames(defaultcss.all, sty.freeBox__jJb97)}>
                  <LockCorrectSvgrepoComsvgIcon
                    className={classNames(defaultcss.all, sty.svg__vxWwm)}
                    role={"img"}
                  />
                </div>

                <div
                  className={classNames(defaultcss.all, sty.freeBox___0Eq7Q)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___9GjQ
                    )}
                  >
                    {"Locked Wallet"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__kqVm6
                    )}
                  >
                    {"200.000.000 BUSDK (20%)"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__vssU
                    )}
                  >
                    {
                      "These tokens will be used to give liquidity to future major exchanges and, whether needed, to make manual burns."
                    }
                  </div>
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__sTdGn)}
              >
                <div className={classNames(defaultcss.all, sty.freeBox__lv9JA)}>
                  <FireSvgrepoComsvgIcon
                    className={classNames(defaultcss.all, sty.svg__uO2O)}
                    role={"img"}
                  />
                </div>

                <div className={classNames(defaultcss.all, sty.freeBox__ju4Ww)}>
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___2Krvz
                    )}
                  >
                    {"Initial Burn"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__ng6Ef
                    )}
                  >
                    {"240.000.000 BUSDK (24%)"}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___7WaoE
                    )}
                  >
                    {
                      "Will be immediately burned before the token launch on pancake swap."
                    }
                  </div>
                </div>
              </p.Stack>
            </p.Stack>
          ) : null}

          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img___39Gl)}
            role={"img"}
            src={"/plasmic/liretest/images/divider3Png.png"}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__dF9FF)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__onQ4E)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground4"}
                data-plasmic-override={overrides.foreground4}
                hasGap={true}
                className={classNames(defaultcss.all, sty.foreground4)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__ihlAw
                  )}
                >
                  {"OUR FUTURE PLANS"}
                </div>

                <h2
                  className={classNames(
                    defaultcss.h2,
                    defaultcss.__wab_text,
                    sty.h2__sF4Ik
                  )}
                >
                  {"Roadmap."}
                </h2>
              </p.Stack>
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.freeBox__kT1Kr)}>
              <div className={classNames(defaultcss.all, sty.freeBox___1F3U5)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__wiC08
                  )}
                >
                  {"Q2"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___8LA
                  )}
                >
                  {"Concept"}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox___4U7Kv)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__vJc8H)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__mDntD
                    )}
                  >
                    {"Define project goals"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__sLjut)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__pb2FH)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__s0Tm
                    )}
                  >
                    {"Define scope"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__uua1O)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__hfKhi)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__qkakA
                    )}
                  >
                    {"Create a project plan"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__wRoZk)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__xbYaw)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__lwmVy
                    )}
                  >
                    {"Define roles and responsibilities"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox___2DPeE)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__uiRXj)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__t4UOm
                    )}
                  >
                    {"Manage project resources"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__gTicC)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__tVMnK)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__qiLkD
                    )}
                  >
                    {"Monitor project progress"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__l2Rp5)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__znh79)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__utZqo
                    )}
                  >
                    {"Handover deliverables"}
                  </div>
                </p.Stack>
              </div>

              <div className={classNames(defaultcss.all, sty.freeBox__c3Bh7)}>
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__okP3F
                  )}
                >
                  {"Q3"}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___24Un5
                  )}
                >
                  {"Launch"}
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__t6LNu)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__iMl6)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__zjUwy
                    )}
                  >
                    {"Create token"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__nz2Tu)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__peBbh)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__nfGbc
                    )}
                  >
                    {"Create website"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__mP6Fj)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__qXfi)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__vbuSh
                    )}
                  >
                    {"Create communities"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__sVvL)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg___7XdFj)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__im14D
                    )}
                  >
                    {"Private & Public Presale"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__fJq84)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg___51Odt)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___3RFio
                    )}
                  >
                    {"PancakeSwap Launch"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__zIjX5)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__bhrvp)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__sl63J
                    )}
                  >
                    {"Marketing Campaigns"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__wGGyk)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg__n5KVc)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__m7PKn
                    )}
                  >
                    {"CMC, CG, BF Listings"}
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.freeBox__t2JBd)}
                >
                  <Icon14Icon
                    className={classNames(defaultcss.all, sty.svg___4QzYa)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__prCkD
                    )}
                  >
                    {"Major exchanges Listings"}
                  </div>
                </p.Stack>
              </div>
            </div>
          </p.Stack>

          <img
            alt={""}
            className={classNames(defaultcss.img, sty.img__vtYxF)}
            role={"img"}
            src={"/plasmic/liretest/images/divider2Png.png"}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___8LUcL)}
          >
            <div
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.freeBox__boJb2
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "The more earlier \nthe more rewards"
                : "The earlier \nthe more rewards"}
            </div>
          </p.Stack>

          <div className={classNames(defaultcss.all, sty.freeBox__tijcc)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.freeBox__nEUpV)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__yInMi)}
              >
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img___4MF2)}
                  role={"img"}
                  src={"/plasmic/liretest/images/risorsa1Rank12Svg.svg"}
                />

                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__kljzd)}
                  role={"img"}
                  src={"/plasmic/liretest/images/busdkittiessvg.svg"}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__kxwzX)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox___7JaYn
                  )}
                >
                  {"About"}
                </div>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.link__iexdv)}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__phMUt)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__hqAq
                    )}
                  >
                    {"Whitepaper"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__pq6LP)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  data-plasmic-name={"pancake"}
                  data-plasmic-override={overrides.pancake}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.pancake)}
                  component={Link}
                  href={
                    "https://pancakeswap.finance/swap?outputCurrency=0x85c660fe30e4c26aabd0938bce3f29c2ddd49b5e" as const
                  }
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg___1Bq7R)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__d4G9U
                    )}
                  >
                    {"Buy on PancakeSwap"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__iGtab)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  data-plasmic-name={"poocoinChart"}
                  data-plasmic-override={overrides.poocoinChart}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.poocoinChart)}
                  component={Link}
                  href={
                    "https://poocoin.app/tokens/0x85c660fe30e4c26aabd0938bce3f29c2ddd49b5e" as const
                  }
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__wa5FW)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__tj7Ds
                    )}
                  >
                    {"Poocoin chart"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__iu6Bl)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.freeBox__jwV3I)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.freeBox__eJt0P
                  )}
                >
                  {"Socials"}
                </div>

                <p.Stack
                  as={p.PlasmicLink}
                  data-plasmic-name={"telegram"}
                  data-plasmic-override={overrides.telegram}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.telegram)}
                  component={Link}
                  href={"https://t.me/BusdKitties" as const}
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__szijp)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox___3Vmr2
                    )}
                  >
                    {"Telegram"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg___9ZUi)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  data-plasmic-name={"twitter"}
                  data-plasmic-override={overrides.twitter}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.twitter)}
                  component={Link}
                  href={"https://twitter.com/BusdKitties" as const}
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__lT4C)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__m8PCd
                    )}
                  >
                    {"Twitter"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg___2RfoX)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>

                <p.Stack
                  as={p.PlasmicLink}
                  data-plasmic-name={"reddit"}
                  data-plasmic-override={overrides.reddit}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.reddit)}
                  component={Link}
                  href={"https://www.reddit.com/r/BusdKitties/" as const}
                  platform={"nextjs"}
                  target={"_blank" as const}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__ozetf)}
                      role={"img"}
                    />
                  ) : null}

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.freeBox__cMxXl
                    )}
                  >
                    {"Reddit"}
                  </div>

                  {false ? (
                    <IconIcon
                      className={classNames(defaultcss.all, sty.svg__royBn)}
                      role={"img"}
                    />
                  ) : null}
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "hero",
    "whitePaper",
    "button",
    "chart",
    "telegram3",
    "telegram2",
    "reddit2",
    "discord2",
    "discord",
    "switchTokenomics",
    "distributionCards",
    "distributionCards2",
    "foreground4",
    "pancake",
    "poocoinChart",
    "telegram",
    "twitter",
    "reddit"
  ],
  hero: [
    "hero",
    "whitePaper",
    "button",
    "chart",
    "telegram3",
    "telegram2",
    "reddit2",
    "discord2",
    "discord"
  ],
  whitePaper: ["whitePaper"],
  button: ["button"],
  chart: ["chart"],
  telegram3: ["telegram3", "telegram2"],
  telegram2: ["telegram2"],
  reddit2: ["reddit2"],
  discord2: ["discord2", "discord"],
  discord: ["discord"],
  switchTokenomics: ["switchTokenomics"],
  distributionCards: ["distributionCards"],
  distributionCards2: ["distributionCards2"],
  foreground4: ["foreground4"],
  pancake: ["pancake"],
  poocoinChart: ["poocoinChart"],
  telegram: ["telegram"],
  twitter: ["twitter"],
  reddit: ["reddit"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  hero: "div";
  whitePaper: "a";
  button: "button";
  chart: "a";
  telegram3: "a";
  telegram2: "img";
  reddit2: "a";
  discord2: "a";
  discord: "svg";
  switchTokenomics: typeof SwitchTokenomics;
  distributionCards: "div";
  distributionCards2: "div";
  foreground4: "div";
  pancake: "a";
  poocoinChart: "a";
  telegram: "a";
  twitter: "a";
  reddit: "a";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicHomepage__Fetches;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    whitePaper: makeNodeComponent("whitePaper"),
    button: makeNodeComponent("button"),
    chart: makeNodeComponent("chart"),
    telegram3: makeNodeComponent("telegram3"),
    telegram2: makeNodeComponent("telegram2"),
    reddit2: makeNodeComponent("reddit2"),
    discord2: makeNodeComponent("discord2"),
    discord: makeNodeComponent("discord"),
    switchTokenomics: makeNodeComponent("switchTokenomics"),
    distributionCards: makeNodeComponent("distributionCards"),
    distributionCards2: makeNodeComponent("distributionCards2"),
    foreground4: makeNodeComponent("foreground4"),
    pancake: makeNodeComponent("pancake"),
    poocoinChart: makeNodeComponent("poocoinChart"),
    telegram: makeNodeComponent("telegram"),
    twitter: makeNodeComponent("twitter"),
    reddit: makeNodeComponent("reddit"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
